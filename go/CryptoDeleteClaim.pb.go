// Code generated by protoc-gen-go. DO NOT EDIT.
// source: CryptoDeleteClaim.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Delete a claim hash that was attached to the given account. This transaction is valid if signed by all the keys used for transfers out of the account. It is also valid if signed by any single ThresholdKeys in the deleteKeys list for this hash. See CryptoAddClaimTransaction for more information about claim hashes.
type CryptoDeleteClaimTransactionBody struct {
	AccountIDToDeleteFrom *AccountID `protobuf:"bytes,2,opt,name=accountIDToDeleteFrom,proto3" json:"accountIDToDeleteFrom,omitempty"`
	HashToDelete          []byte     `protobuf:"bytes,3,opt,name=hashToDelete,proto3" json:"hashToDelete,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}   `json:"-"`
	XXX_unrecognized      []byte     `json:"-"`
	XXX_sizecache         int32      `json:"-"`
}

func (m *CryptoDeleteClaimTransactionBody) Reset()         { *m = CryptoDeleteClaimTransactionBody{} }
func (m *CryptoDeleteClaimTransactionBody) String() string { return proto.CompactTextString(m) }
func (*CryptoDeleteClaimTransactionBody) ProtoMessage()    {}
func (*CryptoDeleteClaimTransactionBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_24a86ad0f5a08bed, []int{0}
}

func (m *CryptoDeleteClaimTransactionBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CryptoDeleteClaimTransactionBody.Unmarshal(m, b)
}
func (m *CryptoDeleteClaimTransactionBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CryptoDeleteClaimTransactionBody.Marshal(b, m, deterministic)
}
func (m *CryptoDeleteClaimTransactionBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CryptoDeleteClaimTransactionBody.Merge(m, src)
}
func (m *CryptoDeleteClaimTransactionBody) XXX_Size() int {
	return xxx_messageInfo_CryptoDeleteClaimTransactionBody.Size(m)
}
func (m *CryptoDeleteClaimTransactionBody) XXX_DiscardUnknown() {
	xxx_messageInfo_CryptoDeleteClaimTransactionBody.DiscardUnknown(m)
}

var xxx_messageInfo_CryptoDeleteClaimTransactionBody proto.InternalMessageInfo

func (m *CryptoDeleteClaimTransactionBody) GetAccountIDToDeleteFrom() *AccountID {
	if m != nil {
		return m.AccountIDToDeleteFrom
	}
	return nil
}

func (m *CryptoDeleteClaimTransactionBody) GetHashToDelete() []byte {
	if m != nil {
		return m.HashToDelete
	}
	return nil
}

func init() {
	proto.RegisterType((*CryptoDeleteClaimTransactionBody)(nil), "proto.CryptoDeleteClaimTransactionBody")
}

func init() { proto.RegisterFile("CryptoDeleteClaim.proto", fileDescriptor_24a86ad0f5a08bed) }

var fileDescriptor_24a86ad0f5a08bed = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x77, 0x2e, 0xaa, 0x2c,
	0x28, 0xc9, 0x77, 0x49, 0xcd, 0x49, 0x2d, 0x49, 0x75, 0xce, 0x49, 0xcc, 0xcc, 0xd5, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x02, 0x4e, 0x89, 0xc5, 0x99, 0xc9, 0x21, 0x95,
	0x05, 0xa9, 0xc5, 0x10, 0x09, 0xa5, 0x3e, 0x46, 0x2e, 0x05, 0x0c, 0x4d, 0x21, 0x45, 0x89, 0x79,
	0xc5, 0x89, 0xc9, 0x25, 0x99, 0xf9, 0x79, 0x4e, 0xf9, 0x29, 0x95, 0x42, 0x6e, 0x5c, 0xa2, 0x89,
	0xc9, 0xc9, 0xf9, 0xa5, 0x79, 0x25, 0x9e, 0x2e, 0x21, 0x50, 0x85, 0x6e, 0x45, 0xf9, 0xb9, 0x12,
	0x4c, 0x0a, 0x8c, 0x1a, 0xdc, 0x46, 0x02, 0x10, 0xb3, 0xf4, 0x1c, 0x61, 0x6a, 0x82, 0xb0, 0x2b,
	0x17, 0x52, 0xe2, 0xe2, 0xc9, 0x48, 0x2c, 0xce, 0x80, 0x89, 0x49, 0x30, 0x2b, 0x30, 0x6a, 0xf0,
	0x04, 0xa1, 0x88, 0x39, 0xa9, 0x71, 0x29, 0x25, 0xe7, 0xe7, 0xea, 0x65, 0xa4, 0xa6, 0xa4, 0x16,
	0x25, 0x82, 0x64, 0xd2, 0x8b, 0x12, 0x0b, 0x32, 0xf4, 0x12, 0x0b, 0x32, 0xa1, 0xb6, 0x64, 0x25,
	0x96, 0x25, 0x06, 0x30, 0x26, 0xb1, 0x81, 0x79, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe1,
	0xa8, 0xab, 0x33, 0xf3, 0x00, 0x00, 0x00,
}
