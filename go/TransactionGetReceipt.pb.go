// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TransactionGetReceipt.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Get the receipt of a transaction, given its transaction ID. Once a transaction reaches consensus, then information about whether it succeeded or failed will be available until the end of the receipt period.  Before and after the receipt period, and for a transaction that was never submitted, the receipt is unknown.  This query is free (the payment field is left empty).
type TransactionGetReceiptQuery struct {
	Header               *QueryHeader   `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	TransactionID        *TransactionID `protobuf:"bytes,2,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TransactionGetReceiptQuery) Reset()         { *m = TransactionGetReceiptQuery{} }
func (m *TransactionGetReceiptQuery) String() string { return proto.CompactTextString(m) }
func (*TransactionGetReceiptQuery) ProtoMessage()    {}
func (*TransactionGetReceiptQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_198911f685a2f526, []int{0}
}

func (m *TransactionGetReceiptQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionGetReceiptQuery.Unmarshal(m, b)
}
func (m *TransactionGetReceiptQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionGetReceiptQuery.Marshal(b, m, deterministic)
}
func (m *TransactionGetReceiptQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionGetReceiptQuery.Merge(m, src)
}
func (m *TransactionGetReceiptQuery) XXX_Size() int {
	return xxx_messageInfo_TransactionGetReceiptQuery.Size(m)
}
func (m *TransactionGetReceiptQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionGetReceiptQuery.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionGetReceiptQuery proto.InternalMessageInfo

func (m *TransactionGetReceiptQuery) GetHeader() *QueryHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TransactionGetReceiptQuery) GetTransactionID() *TransactionID {
	if m != nil {
		return m.TransactionID
	}
	return nil
}

// Response when the client sends the node TransactionGetReceiptQuery. If it created a new entity (account, file, or smart contract instance) then one of the three ID fields will be filled in with the ID of the new entity. Sometimes a single transaction will create more than one new entity, such as when a new contract instance is created, and this also creates the new account that it owned by that instance.
type TransactionGetReceiptResponse struct {
	Header               *ResponseHeader     `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Receipt              *TransactionReceipt `protobuf:"bytes,2,opt,name=receipt,proto3" json:"receipt,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *TransactionGetReceiptResponse) Reset()         { *m = TransactionGetReceiptResponse{} }
func (m *TransactionGetReceiptResponse) String() string { return proto.CompactTextString(m) }
func (*TransactionGetReceiptResponse) ProtoMessage()    {}
func (*TransactionGetReceiptResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_198911f685a2f526, []int{1}
}

func (m *TransactionGetReceiptResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionGetReceiptResponse.Unmarshal(m, b)
}
func (m *TransactionGetReceiptResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionGetReceiptResponse.Marshal(b, m, deterministic)
}
func (m *TransactionGetReceiptResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionGetReceiptResponse.Merge(m, src)
}
func (m *TransactionGetReceiptResponse) XXX_Size() int {
	return xxx_messageInfo_TransactionGetReceiptResponse.Size(m)
}
func (m *TransactionGetReceiptResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionGetReceiptResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionGetReceiptResponse proto.InternalMessageInfo

func (m *TransactionGetReceiptResponse) GetHeader() *ResponseHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *TransactionGetReceiptResponse) GetReceipt() *TransactionReceipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

func init() {
	proto.RegisterType((*TransactionGetReceiptQuery)(nil), "proto.TransactionGetReceiptQuery")
	proto.RegisterType((*TransactionGetReceiptResponse)(nil), "proto.TransactionGetReceiptResponse")
}

func init() { proto.RegisterFile("TransactionGetReceipt.proto", fileDescriptor_198911f685a2f526) }

var fileDescriptor_198911f685a2f526 = []byte{
	// 232 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8f, 0x51, 0x4b, 0xc6, 0x20,
	0x14, 0x86, 0x31, 0xe8, 0x0b, 0x8c, 0xa0, 0x64, 0xc1, 0x5a, 0x04, 0xb1, 0x8b, 0x88, 0x20, 0x2f,
	0xda, 0x5d, 0x97, 0x23, 0xa8, 0xee, 0x4a, 0xf6, 0x07, 0x4e, 0xee, 0x90, 0x06, 0x4d, 0x51, 0x0b,
	0x76, 0x5d, 0x3f, 0x3c, 0x70, 0xae, 0x5c, 0xdf, 0xae, 0xc4, 0xe3, 0xf3, 0xbe, 0xe7, 0x91, 0x9e,
	0x76, 0x0e, 0x06, 0x0f, 0x32, 0x68, 0x33, 0xdc, 0x63, 0x10, 0x28, 0x51, 0xdb, 0xc0, 0xad, 0x33,
	0xc1, 0xb0, 0xdd, 0x78, 0x54, 0x65, 0xc6, 0x2c, 0x80, 0xea, 0xb0, 0x05, 0xaf, 0x65, 0x37, 0x5a,
	0xf4, 0x69, 0x72, 0xf4, 0xfc, 0x81, 0x6e, 0x7c, 0x40, 0xe8, 0xd1, 0xa5, 0x51, 0x21, 0xd0, 0x5b,
	0x33, 0x78, 0xcc, 0xa7, 0xf5, 0x37, 0xa1, 0xd5, 0xea, 0xee, 0x58, 0xc0, 0xae, 0xe8, 0x46, 0x45,
	0xbc, 0x24, 0xe7, 0xe4, 0x72, 0xff, 0x86, 0x4d, 0x31, 0x9e, 0xd5, 0x8b, 0x44, 0xb0, 0x5b, 0x7a,
	0x10, 0xfe, 0x9a, 0x1e, 0xef, 0xca, 0x9d, 0x18, 0x29, 0x52, 0xa4, 0xcb, 0xdf, 0xc4, 0x12, 0xad,
	0xbf, 0x08, 0x3d, 0x5b, 0xd5, 0x98, 0xa5, 0xd9, 0xf5, 0x3f, 0x93, 0xe3, 0x54, 0xbb, 0xfc, 0xd5,
	0xaf, 0x4c, 0x43, 0xf7, 0xdc, 0xd4, 0x90, 0x34, 0x4e, 0xb6, 0x35, 0xe6, 0x15, 0x33, 0xd9, 0x5e,
	0xd0, 0x5a, 0x9a, 0x77, 0xae, 0xb0, 0x47, 0x07, 0x0a, 0xbc, 0x7a, 0x75, 0x60, 0x15, 0x07, 0xab,
	0x53, 0xf8, 0x0d, 0x3e, 0xe1, 0x89, 0xbc, 0x6c, 0xe2, 0xad, 0xf9, 0x09, 0x00, 0x00, 0xff, 0xff,
	0xb5, 0x32, 0xbd, 0xc3, 0xb6, 0x01, 0x00, 0x00,
}
