// Code generated by protoc-gen-go. DO NOT EDIT.
// source: Timestamp.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// An exact date and time. This is the same data structure as the protobuf Timestamp.proto (see the comments in https://github.com/google/protobuf/blob/master/src/google/protobuf/timestamp.proto)
type Timestamp struct {
	Seconds              int64    `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	Nanos                int32    `protobuf:"varint,2,opt,name=nanos,proto3" json:"nanos,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Timestamp) Reset()         { *m = Timestamp{} }
func (m *Timestamp) String() string { return proto.CompactTextString(m) }
func (*Timestamp) ProtoMessage()    {}
func (*Timestamp) Descriptor() ([]byte, []int) {
	return fileDescriptor_688c79fb5dc63c9c, []int{0}
}

func (m *Timestamp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Timestamp.Unmarshal(m, b)
}
func (m *Timestamp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Timestamp.Marshal(b, m, deterministic)
}
func (m *Timestamp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Timestamp.Merge(m, src)
}
func (m *Timestamp) XXX_Size() int {
	return xxx_messageInfo_Timestamp.Size(m)
}
func (m *Timestamp) XXX_DiscardUnknown() {
	xxx_messageInfo_Timestamp.DiscardUnknown(m)
}

var xxx_messageInfo_Timestamp proto.InternalMessageInfo

func (m *Timestamp) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func (m *Timestamp) GetNanos() int32 {
	if m != nil {
		return m.Nanos
	}
	return 0
}

// An exact date and time,  with a resolution of one second (no nanoseconds).
type TimestampSeconds struct {
	Seconds              int64    `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimestampSeconds) Reset()         { *m = TimestampSeconds{} }
func (m *TimestampSeconds) String() string { return proto.CompactTextString(m) }
func (*TimestampSeconds) ProtoMessage()    {}
func (*TimestampSeconds) Descriptor() ([]byte, []int) {
	return fileDescriptor_688c79fb5dc63c9c, []int{1}
}

func (m *TimestampSeconds) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimestampSeconds.Unmarshal(m, b)
}
func (m *TimestampSeconds) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimestampSeconds.Marshal(b, m, deterministic)
}
func (m *TimestampSeconds) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimestampSeconds.Merge(m, src)
}
func (m *TimestampSeconds) XXX_Size() int {
	return xxx_messageInfo_TimestampSeconds.Size(m)
}
func (m *TimestampSeconds) XXX_DiscardUnknown() {
	xxx_messageInfo_TimestampSeconds.DiscardUnknown(m)
}

var xxx_messageInfo_TimestampSeconds proto.InternalMessageInfo

func (m *TimestampSeconds) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

func init() {
	proto.RegisterType((*Timestamp)(nil), "proto.Timestamp")
	proto.RegisterType((*TimestampSeconds)(nil), "proto.TimestampSeconds")
}

func init() { proto.RegisterFile("Timestamp.proto", fileDescriptor_688c79fb5dc63c9c) }

var fileDescriptor_688c79fb5dc63c9c = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x0f, 0xc9, 0xcc, 0x4d,
	0x2d, 0x2e, 0x49, 0xcc, 0x2d, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x4a,
	0xd6, 0x5c, 0x9c, 0x70, 0x19, 0x21, 0x09, 0x2e, 0xf6, 0xe2, 0xd4, 0xe4, 0xfc, 0xbc, 0x94, 0x62,
	0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x18, 0x57, 0x48, 0x84, 0x8b, 0x35, 0x2f, 0x31, 0x2f,
	0xbf, 0x58, 0x82, 0x49, 0x81, 0x51, 0x83, 0x35, 0x08, 0xc2, 0x51, 0xd2, 0xe1, 0x12, 0x80, 0x6b,
	0x0e, 0x86, 0xaa, 0xc4, 0x69, 0x86, 0x93, 0x1a, 0x97, 0x52, 0x72, 0x7e, 0xae, 0x5e, 0x46, 0x6a,
	0x4a, 0x6a, 0x51, 0x62, 0x46, 0x62, 0x71, 0x46, 0x7a, 0x51, 0x62, 0x41, 0x86, 0x5e, 0x62, 0x41,
	0x26, 0xc4, 0x49, 0x7a, 0x59, 0x89, 0x65, 0x89, 0x01, 0x8c, 0x49, 0x6c, 0x60, 0x9e, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x98, 0x65, 0x6c, 0x4a, 0xb3, 0x00, 0x00, 0x00,
}
