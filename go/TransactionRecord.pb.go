// Code generated by protoc-gen-go. DO NOT EDIT.
// source: TransactionRecord.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Response when the client sends the node TransactionGetRecordResponse
type TransactionRecord struct {
	Receipt            *TransactionReceipt `protobuf:"bytes,1,opt,name=receipt,proto3" json:"receipt,omitempty"`
	TransactionHash    []byte              `protobuf:"bytes,2,opt,name=transactionHash,proto3" json:"transactionHash,omitempty"`
	ConsensusTimestamp *Timestamp          `protobuf:"bytes,3,opt,name=consensusTimestamp,proto3" json:"consensusTimestamp,omitempty"`
	TransactionID      *TransactionID      `protobuf:"bytes,4,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	Memo               string              `protobuf:"bytes,5,opt,name=memo,proto3" json:"memo,omitempty"`
	TransactionFee     uint64              `protobuf:"varint,6,opt,name=transactionFee,proto3" json:"transactionFee,omitempty"`
	// Types that are valid to be assigned to Body:
	//	*TransactionRecord_ContractCallResult
	//	*TransactionRecord_ContractCreateResult
	//	*TransactionRecord_TransferList
	Body                 isTransactionRecord_Body `protobuf_oneof:"body"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *TransactionRecord) Reset()         { *m = TransactionRecord{} }
func (m *TransactionRecord) String() string { return proto.CompactTextString(m) }
func (*TransactionRecord) ProtoMessage()    {}
func (*TransactionRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_116f8900556a83d9, []int{0}
}

func (m *TransactionRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRecord.Unmarshal(m, b)
}
func (m *TransactionRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRecord.Marshal(b, m, deterministic)
}
func (m *TransactionRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRecord.Merge(m, src)
}
func (m *TransactionRecord) XXX_Size() int {
	return xxx_messageInfo_TransactionRecord.Size(m)
}
func (m *TransactionRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRecord.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRecord proto.InternalMessageInfo

func (m *TransactionRecord) GetReceipt() *TransactionReceipt {
	if m != nil {
		return m.Receipt
	}
	return nil
}

func (m *TransactionRecord) GetTransactionHash() []byte {
	if m != nil {
		return m.TransactionHash
	}
	return nil
}

func (m *TransactionRecord) GetConsensusTimestamp() *Timestamp {
	if m != nil {
		return m.ConsensusTimestamp
	}
	return nil
}

func (m *TransactionRecord) GetTransactionID() *TransactionID {
	if m != nil {
		return m.TransactionID
	}
	return nil
}

func (m *TransactionRecord) GetMemo() string {
	if m != nil {
		return m.Memo
	}
	return ""
}

func (m *TransactionRecord) GetTransactionFee() uint64 {
	if m != nil {
		return m.TransactionFee
	}
	return 0
}

type isTransactionRecord_Body interface {
	isTransactionRecord_Body()
}

type TransactionRecord_ContractCallResult struct {
	ContractCallResult *ContractFunctionResult `protobuf:"bytes,7,opt,name=contractCallResult,proto3,oneof"`
}

type TransactionRecord_ContractCreateResult struct {
	ContractCreateResult *ContractFunctionResult `protobuf:"bytes,8,opt,name=contractCreateResult,proto3,oneof"`
}

type TransactionRecord_TransferList struct {
	TransferList *TransferList `protobuf:"bytes,9,opt,name=transferList,proto3,oneof"`
}

func (*TransactionRecord_ContractCallResult) isTransactionRecord_Body() {}

func (*TransactionRecord_ContractCreateResult) isTransactionRecord_Body() {}

func (*TransactionRecord_TransferList) isTransactionRecord_Body() {}

func (m *TransactionRecord) GetBody() isTransactionRecord_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *TransactionRecord) GetContractCallResult() *ContractFunctionResult {
	if x, ok := m.GetBody().(*TransactionRecord_ContractCallResult); ok {
		return x.ContractCallResult
	}
	return nil
}

func (m *TransactionRecord) GetContractCreateResult() *ContractFunctionResult {
	if x, ok := m.GetBody().(*TransactionRecord_ContractCreateResult); ok {
		return x.ContractCreateResult
	}
	return nil
}

func (m *TransactionRecord) GetTransferList() *TransferList {
	if x, ok := m.GetBody().(*TransactionRecord_TransferList); ok {
		return x.TransferList
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TransactionRecord) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TransactionRecord_OneofMarshaler, _TransactionRecord_OneofUnmarshaler, _TransactionRecord_OneofSizer, []interface{}{
		(*TransactionRecord_ContractCallResult)(nil),
		(*TransactionRecord_ContractCreateResult)(nil),
		(*TransactionRecord_TransferList)(nil),
	}
}

func _TransactionRecord_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TransactionRecord)
	// body
	switch x := m.Body.(type) {
	case *TransactionRecord_ContractCallResult:
		b.EncodeVarint(7<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContractCallResult); err != nil {
			return err
		}
	case *TransactionRecord_ContractCreateResult:
		b.EncodeVarint(8<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ContractCreateResult); err != nil {
			return err
		}
	case *TransactionRecord_TransferList:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TransferList); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TransactionRecord.Body has unexpected type %T", x)
	}
	return nil
}

func _TransactionRecord_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TransactionRecord)
	switch tag {
	case 7: // body.contractCallResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContractFunctionResult)
		err := b.DecodeMessage(msg)
		m.Body = &TransactionRecord_ContractCallResult{msg}
		return true, err
	case 8: // body.contractCreateResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ContractFunctionResult)
		err := b.DecodeMessage(msg)
		m.Body = &TransactionRecord_ContractCreateResult{msg}
		return true, err
	case 9: // body.transferList
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TransferList)
		err := b.DecodeMessage(msg)
		m.Body = &TransactionRecord_TransferList{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TransactionRecord_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TransactionRecord)
	// body
	switch x := m.Body.(type) {
	case *TransactionRecord_ContractCallResult:
		s := proto.Size(x.ContractCallResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TransactionRecord_ContractCreateResult:
		s := proto.Size(x.ContractCreateResult)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *TransactionRecord_TransferList:
		s := proto.Size(x.TransferList)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*TransactionRecord)(nil), "proto.TransactionRecord")
}

func init() { proto.RegisterFile("TransactionRecord.proto", fileDescriptor_116f8900556a83d9) }

var fileDescriptor_116f8900556a83d9 = []byte{
	// 360 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x51, 0x4d, 0x6f, 0xe2, 0x30,
	0x14, 0x24, 0xbb, 0x01, 0x16, 0x2f, 0x2d, 0xd4, 0x45, 0xc2, 0x45, 0xaa, 0x14, 0x71, 0x40, 0x39,
	0xe5, 0x50, 0x4e, 0xed, 0xa9, 0x02, 0x84, 0x40, 0x42, 0x6a, 0xe5, 0xf2, 0x07, 0x1e, 0xe1, 0xb5,
	0x49, 0x95, 0xc4, 0x91, 0x6d, 0x2a, 0xf1, 0x43, 0xfa, 0x7f, 0xab, 0x3a, 0x0e, 0xe5, 0xeb, 0xd0,
	0x53, 0xe2, 0x99, 0x79, 0x33, 0xcf, 0x63, 0xd2, 0x5d, 0x4a, 0xc8, 0x14, 0x84, 0x3a, 0x16, 0x19,
	0xc7, 0x50, 0xc8, 0x75, 0x90, 0x4b, 0xa1, 0x05, 0xad, 0x9a, 0x4f, 0xaf, 0xb5, 0x8c, 0x53, 0x54,
	0x1a, 0xd2, 0xbc, 0xc0, 0x7b, 0xed, 0x11, 0xa8, 0x38, 0x5c, 0x6e, 0x73, 0x54, 0x16, 0x61, 0x87,
	0x16, 0x18, 0xe7, 0xda, 0x32, 0x9d, 0xb1, 0xdc, 0xe6, 0x5a, 0x18, 0xfe, 0x15, 0xa5, 0x45, 0xbb,
	0x63, 0x91, 0x69, 0x09, 0xa1, 0x1e, 0x43, 0x92, 0x2c, 0x44, 0x08, 0x49, 0x41, 0xf4, 0x3f, 0x5d,
	0x72, 0x75, 0xb2, 0x0e, 0x1d, 0x92, 0xba, 0x2c, 0x5c, 0x99, 0xe3, 0x39, 0xfe, 0xff, 0xbb, 0x9b,
	0x42, 0x1e, 0x9c, 0xc6, 0xf2, 0x52, 0x49, 0x7d, 0xd2, 0xd2, 0x3f, 0xf4, 0x0c, 0x54, 0xc4, 0xfe,
	0x78, 0x8e, 0xdf, 0xe4, 0xc7, 0x30, 0x7d, 0x24, 0x34, 0x14, 0x99, 0xc2, 0x4c, 0x6d, 0xd4, 0xee,
	0xae, 0xec, 0xaf, 0x49, 0x6a, 0x97, 0x49, 0x25, 0xce, 0xcf, 0x68, 0xe9, 0x03, 0xb9, 0xd8, 0x33,
	0x9d, 0x4f, 0x98, 0x6b, 0x86, 0x3b, 0xa7, 0x6b, 0xce, 0x27, 0xfc, 0x50, 0x4a, 0x29, 0x71, 0x53,
	0x4c, 0x05, 0xab, 0x7a, 0x8e, 0xdf, 0xe0, 0xe6, 0x9f, 0x0e, 0xc8, 0xe5, 0x9e, 0x68, 0x8a, 0xc8,
	0x6a, 0x9e, 0xe3, 0xbb, 0xfc, 0x08, 0xa5, 0x4f, 0x66, 0xf3, 0x5d, 0x93, 0x1c, 0xd5, 0x26, 0xd1,
	0xac, 0x6e, 0xc2, 0x6f, 0x6d, 0x78, 0x59, 0xf5, 0x74, 0x93, 0xd9, 0xa2, 0xbe, 0x45, 0xb3, 0x0a,
	0x3f, 0x33, 0x4a, 0x5f, 0x48, 0x67, 0x87, 0x4a, 0x04, 0x8d, 0xd6, 0xf2, 0xdf, 0xef, 0x2c, 0xcf,
	0x0e, 0xd3, 0x7b, 0xd2, 0xd4, 0xf6, 0xfd, 0x17, 0xb1, 0xd2, 0xac, 0x61, 0xcc, 0xae, 0xf7, 0xcb,
	0xb1, 0xd4, 0xac, 0xc2, 0x0f, 0xa4, 0xa3, 0x1a, 0x71, 0x57, 0x62, 0xbd, 0x1d, 0x0d, 0x48, 0x3f,
	0x14, 0x69, 0x10, 0xe1, 0x1a, 0x25, 0x44, 0xa0, 0xa2, 0x37, 0x09, 0x79, 0x14, 0x40, 0x1e, 0x5b,
	0x97, 0x77, 0xf8, 0x80, 0x67, 0x67, 0x55, 0x33, 0xa7, 0xe1, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff,
	0xf4, 0x59, 0x94, 0xcd, 0xd4, 0x02, 0x00, 0x00,
}
