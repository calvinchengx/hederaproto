/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var AdminDelete_pb = require('./AdminDelete_pb.js');
var AdminUndelete_pb = require('./AdminUndelete_pb.js');
var ContractCall_pb = require('./ContractCall_pb.js');
var ContractCreate_pb = require('./ContractCreate_pb.js');
var ContractUpdate_pb = require('./ContractUpdate_pb.js');
var CryptoAddClaim_pb = require('./CryptoAddClaim_pb.js');
var CryptoCreate_pb = require('./CryptoCreate_pb.js');
var CryptoDelete_pb = require('./CryptoDelete_pb.js');
var CryptoDeleteClaim_pb = require('./CryptoDeleteClaim_pb.js');
var CryptoTransfer_pb = require('./CryptoTransfer_pb.js');
var CryptoUpdate_pb = require('./CryptoUpdate_pb.js');
var FileAppend_pb = require('./FileAppend_pb.js');
var FileCreate_pb = require('./FileCreate_pb.js');
var FileDelete_pb = require('./FileDelete_pb.js');
var FileUpdate_pb = require('./FileUpdate_pb.js');
var Duration_pb = require('./Duration_pb.js');
var BasicTypes_pb = require('./BasicTypes_pb.js');
goog.exportSymbol('proto.proto.Transaction', null, global);
goog.exportSymbol('proto.proto.TransactionBody', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.TransactionBody = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.proto.TransactionBody.oneofGroups_);
};
goog.inherits(proto.proto.TransactionBody, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.TransactionBody.displayName = 'proto.proto.TransactionBody';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.proto.TransactionBody.oneofGroups_ = [[20,21,7,8,9,10,11,12,13,14,15,16,17,18,19]];

/**
 * @enum {number}
 */
proto.proto.TransactionBody.DataCase = {
  DATA_NOT_SET: 0,
  ADMINDELETE: 20,
  ADMINUNDELETE: 21,
  CONTRACTCALL: 7,
  CONTRACTCREATEINSTANCE: 8,
  CONTRACTUPDATEINSTANCE: 9,
  CRYPTOADDCLAIM: 10,
  CRYPTOCREATEACCOUNT: 11,
  CRYPTODELETE: 12,
  CRYPTODELETECLAIM: 13,
  CRYPTOTRANSFER: 14,
  CRYPTOUPDATEACCOUNT: 15,
  FILEAPPEND: 16,
  FILECREATE: 17,
  FILEDELETE: 18,
  FILEUPDATE: 19
};

/**
 * @return {proto.proto.TransactionBody.DataCase}
 */
proto.proto.TransactionBody.prototype.getDataCase = function() {
  return /** @type {proto.proto.TransactionBody.DataCase} */(jspb.Message.computeOneofCase(this, proto.proto.TransactionBody.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.TransactionBody.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.TransactionBody.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.TransactionBody} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TransactionBody.toObject = function(includeInstance, msg) {
  var f, obj = {
    transactionid: (f = msg.getTransactionid()) && BasicTypes_pb.TransactionID.toObject(includeInstance, f),
    nodeaccountid: (f = msg.getNodeaccountid()) && BasicTypes_pb.AccountID.toObject(includeInstance, f),
    transactionfee: jspb.Message.getFieldWithDefault(msg, 3, 0),
    transactionvalidduration: (f = msg.getTransactionvalidduration()) && Duration_pb.Duration.toObject(includeInstance, f),
    generaterecord: jspb.Message.getFieldWithDefault(msg, 5, false),
    memo: jspb.Message.getFieldWithDefault(msg, 6, ""),
    admindelete: (f = msg.getAdmindelete()) && AdminDelete_pb.AdminDeleteTransactionBody.toObject(includeInstance, f),
    adminundelete: (f = msg.getAdminundelete()) && AdminUndelete_pb.AdminUndeleteTransactionBody.toObject(includeInstance, f),
    contractcall: (f = msg.getContractcall()) && ContractCall_pb.ContractCallTransactionBody.toObject(includeInstance, f),
    contractcreateinstance: (f = msg.getContractcreateinstance()) && ContractCreate_pb.ContractCreateTransactionBody.toObject(includeInstance, f),
    contractupdateinstance: (f = msg.getContractupdateinstance()) && ContractUpdate_pb.ContractUpdateTransactionBody.toObject(includeInstance, f),
    cryptoaddclaim: (f = msg.getCryptoaddclaim()) && CryptoAddClaim_pb.CryptoAddClaimTransactionBody.toObject(includeInstance, f),
    cryptocreateaccount: (f = msg.getCryptocreateaccount()) && CryptoCreate_pb.CryptoCreateTransactionBody.toObject(includeInstance, f),
    cryptodelete: (f = msg.getCryptodelete()) && CryptoDelete_pb.CryptoDeleteTransactionBody.toObject(includeInstance, f),
    cryptodeleteclaim: (f = msg.getCryptodeleteclaim()) && CryptoDeleteClaim_pb.CryptoDeleteClaimTransactionBody.toObject(includeInstance, f),
    cryptotransfer: (f = msg.getCryptotransfer()) && CryptoTransfer_pb.CryptoTransferTransactionBody.toObject(includeInstance, f),
    cryptoupdateaccount: (f = msg.getCryptoupdateaccount()) && CryptoUpdate_pb.CryptoUpdateTransactionBody.toObject(includeInstance, f),
    fileappend: (f = msg.getFileappend()) && FileAppend_pb.FileAppendTransactionBody.toObject(includeInstance, f),
    filecreate: (f = msg.getFilecreate()) && FileCreate_pb.FileCreateTransactionBody.toObject(includeInstance, f),
    filedelete: (f = msg.getFiledelete()) && FileDelete_pb.FileDeleteTransactionBody.toObject(includeInstance, f),
    fileupdate: (f = msg.getFileupdate()) && FileUpdate_pb.FileUpdateTransactionBody.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.TransactionBody}
 */
proto.proto.TransactionBody.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.TransactionBody;
  return proto.proto.TransactionBody.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.TransactionBody} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.TransactionBody}
 */
proto.proto.TransactionBody.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new BasicTypes_pb.TransactionID;
      reader.readMessage(value,BasicTypes_pb.TransactionID.deserializeBinaryFromReader);
      msg.setTransactionid(value);
      break;
    case 2:
      var value = new BasicTypes_pb.AccountID;
      reader.readMessage(value,BasicTypes_pb.AccountID.deserializeBinaryFromReader);
      msg.setNodeaccountid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTransactionfee(value);
      break;
    case 4:
      var value = new Duration_pb.Duration;
      reader.readMessage(value,Duration_pb.Duration.deserializeBinaryFromReader);
      msg.setTransactionvalidduration(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setGeneraterecord(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMemo(value);
      break;
    case 20:
      var value = new AdminDelete_pb.AdminDeleteTransactionBody;
      reader.readMessage(value,AdminDelete_pb.AdminDeleteTransactionBody.deserializeBinaryFromReader);
      msg.setAdmindelete(value);
      break;
    case 21:
      var value = new AdminUndelete_pb.AdminUndeleteTransactionBody;
      reader.readMessage(value,AdminUndelete_pb.AdminUndeleteTransactionBody.deserializeBinaryFromReader);
      msg.setAdminundelete(value);
      break;
    case 7:
      var value = new ContractCall_pb.ContractCallTransactionBody;
      reader.readMessage(value,ContractCall_pb.ContractCallTransactionBody.deserializeBinaryFromReader);
      msg.setContractcall(value);
      break;
    case 8:
      var value = new ContractCreate_pb.ContractCreateTransactionBody;
      reader.readMessage(value,ContractCreate_pb.ContractCreateTransactionBody.deserializeBinaryFromReader);
      msg.setContractcreateinstance(value);
      break;
    case 9:
      var value = new ContractUpdate_pb.ContractUpdateTransactionBody;
      reader.readMessage(value,ContractUpdate_pb.ContractUpdateTransactionBody.deserializeBinaryFromReader);
      msg.setContractupdateinstance(value);
      break;
    case 10:
      var value = new CryptoAddClaim_pb.CryptoAddClaimTransactionBody;
      reader.readMessage(value,CryptoAddClaim_pb.CryptoAddClaimTransactionBody.deserializeBinaryFromReader);
      msg.setCryptoaddclaim(value);
      break;
    case 11:
      var value = new CryptoCreate_pb.CryptoCreateTransactionBody;
      reader.readMessage(value,CryptoCreate_pb.CryptoCreateTransactionBody.deserializeBinaryFromReader);
      msg.setCryptocreateaccount(value);
      break;
    case 12:
      var value = new CryptoDelete_pb.CryptoDeleteTransactionBody;
      reader.readMessage(value,CryptoDelete_pb.CryptoDeleteTransactionBody.deserializeBinaryFromReader);
      msg.setCryptodelete(value);
      break;
    case 13:
      var value = new CryptoDeleteClaim_pb.CryptoDeleteClaimTransactionBody;
      reader.readMessage(value,CryptoDeleteClaim_pb.CryptoDeleteClaimTransactionBody.deserializeBinaryFromReader);
      msg.setCryptodeleteclaim(value);
      break;
    case 14:
      var value = new CryptoTransfer_pb.CryptoTransferTransactionBody;
      reader.readMessage(value,CryptoTransfer_pb.CryptoTransferTransactionBody.deserializeBinaryFromReader);
      msg.setCryptotransfer(value);
      break;
    case 15:
      var value = new CryptoUpdate_pb.CryptoUpdateTransactionBody;
      reader.readMessage(value,CryptoUpdate_pb.CryptoUpdateTransactionBody.deserializeBinaryFromReader);
      msg.setCryptoupdateaccount(value);
      break;
    case 16:
      var value = new FileAppend_pb.FileAppendTransactionBody;
      reader.readMessage(value,FileAppend_pb.FileAppendTransactionBody.deserializeBinaryFromReader);
      msg.setFileappend(value);
      break;
    case 17:
      var value = new FileCreate_pb.FileCreateTransactionBody;
      reader.readMessage(value,FileCreate_pb.FileCreateTransactionBody.deserializeBinaryFromReader);
      msg.setFilecreate(value);
      break;
    case 18:
      var value = new FileDelete_pb.FileDeleteTransactionBody;
      reader.readMessage(value,FileDelete_pb.FileDeleteTransactionBody.deserializeBinaryFromReader);
      msg.setFiledelete(value);
      break;
    case 19:
      var value = new FileUpdate_pb.FileUpdateTransactionBody;
      reader.readMessage(value,FileUpdate_pb.FileUpdateTransactionBody.deserializeBinaryFromReader);
      msg.setFileupdate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.TransactionBody.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.TransactionBody.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.TransactionBody} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.TransactionBody.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTransactionid();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      BasicTypes_pb.TransactionID.serializeBinaryToWriter
    );
  }
  f = message.getNodeaccountid();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      BasicTypes_pb.AccountID.serializeBinaryToWriter
    );
  }
  f = message.getTransactionfee();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getTransactionvalidduration();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      Duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getGeneraterecord();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getMemo();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAdmindelete();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      AdminDelete_pb.AdminDeleteTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getAdminundelete();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      AdminUndelete_pb.AdminUndeleteTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getContractcall();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      ContractCall_pb.ContractCallTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getContractcreateinstance();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      ContractCreate_pb.ContractCreateTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getContractupdateinstance();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      ContractUpdate_pb.ContractUpdateTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getCryptoaddclaim();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      CryptoAddClaim_pb.CryptoAddClaimTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getCryptocreateaccount();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      CryptoCreate_pb.CryptoCreateTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getCryptodelete();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      CryptoDelete_pb.CryptoDeleteTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getCryptodeleteclaim();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      CryptoDeleteClaim_pb.CryptoDeleteClaimTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getCryptotransfer();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      CryptoTransfer_pb.CryptoTransferTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getCryptoupdateaccount();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      CryptoUpdate_pb.CryptoUpdateTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getFileappend();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      FileAppend_pb.FileAppendTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getFilecreate();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      FileCreate_pb.FileCreateTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getFiledelete();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      FileDelete_pb.FileDeleteTransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getFileupdate();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      FileUpdate_pb.FileUpdateTransactionBody.serializeBinaryToWriter
    );
  }
};


/**
 * optional TransactionID transactionID = 1;
 * @return {?proto.proto.TransactionID}
 */
proto.proto.TransactionBody.prototype.getTransactionid = function() {
  return /** @type{?proto.proto.TransactionID} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.TransactionID, 1));
};


/** @param {?proto.proto.TransactionID|undefined} value */
proto.proto.TransactionBody.prototype.setTransactionid = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proto.TransactionBody.prototype.clearTransactionid = function() {
  this.setTransactionid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasTransactionid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional AccountID nodeAccountID = 2;
 * @return {?proto.proto.AccountID}
 */
proto.proto.TransactionBody.prototype.getNodeaccountid = function() {
  return /** @type{?proto.proto.AccountID} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.AccountID, 2));
};


/** @param {?proto.proto.AccountID|undefined} value */
proto.proto.TransactionBody.prototype.setNodeaccountid = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.proto.TransactionBody.prototype.clearNodeaccountid = function() {
  this.setNodeaccountid(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasNodeaccountid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 transactionFee = 3;
 * @return {number}
 */
proto.proto.TransactionBody.prototype.getTransactionfee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.proto.TransactionBody.prototype.setTransactionfee = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Duration transactionValidDuration = 4;
 * @return {?proto.proto.Duration}
 */
proto.proto.TransactionBody.prototype.getTransactionvalidduration = function() {
  return /** @type{?proto.proto.Duration} */ (
    jspb.Message.getWrapperField(this, Duration_pb.Duration, 4));
};


/** @param {?proto.proto.Duration|undefined} value */
proto.proto.TransactionBody.prototype.setTransactionvalidduration = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.proto.TransactionBody.prototype.clearTransactionvalidduration = function() {
  this.setTransactionvalidduration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasTransactionvalidduration = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bool generateRecord = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.proto.TransactionBody.prototype.getGeneraterecord = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.proto.TransactionBody.prototype.setGeneraterecord = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional string memo = 6;
 * @return {string}
 */
proto.proto.TransactionBody.prototype.getMemo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.proto.TransactionBody.prototype.setMemo = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional AdminDeleteTransactionBody adminDelete = 20;
 * @return {?proto.proto.AdminDeleteTransactionBody}
 */
proto.proto.TransactionBody.prototype.getAdmindelete = function() {
  return /** @type{?proto.proto.AdminDeleteTransactionBody} */ (
    jspb.Message.getWrapperField(this, AdminDelete_pb.AdminDeleteTransactionBody, 20));
};


/** @param {?proto.proto.AdminDeleteTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setAdmindelete = function(value) {
  jspb.Message.setOneofWrapperField(this, 20, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearAdmindelete = function() {
  this.setAdmindelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasAdmindelete = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional AdminUndeleteTransactionBody adminUndelete = 21;
 * @return {?proto.proto.AdminUndeleteTransactionBody}
 */
proto.proto.TransactionBody.prototype.getAdminundelete = function() {
  return /** @type{?proto.proto.AdminUndeleteTransactionBody} */ (
    jspb.Message.getWrapperField(this, AdminUndelete_pb.AdminUndeleteTransactionBody, 21));
};


/** @param {?proto.proto.AdminUndeleteTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setAdminundelete = function(value) {
  jspb.Message.setOneofWrapperField(this, 21, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearAdminundelete = function() {
  this.setAdminundelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasAdminundelete = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional ContractCallTransactionBody contractCall = 7;
 * @return {?proto.proto.ContractCallTransactionBody}
 */
proto.proto.TransactionBody.prototype.getContractcall = function() {
  return /** @type{?proto.proto.ContractCallTransactionBody} */ (
    jspb.Message.getWrapperField(this, ContractCall_pb.ContractCallTransactionBody, 7));
};


/** @param {?proto.proto.ContractCallTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setContractcall = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearContractcall = function() {
  this.setContractcall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasContractcall = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ContractCreateTransactionBody contractCreateInstance = 8;
 * @return {?proto.proto.ContractCreateTransactionBody}
 */
proto.proto.TransactionBody.prototype.getContractcreateinstance = function() {
  return /** @type{?proto.proto.ContractCreateTransactionBody} */ (
    jspb.Message.getWrapperField(this, ContractCreate_pb.ContractCreateTransactionBody, 8));
};


/** @param {?proto.proto.ContractCreateTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setContractcreateinstance = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearContractcreateinstance = function() {
  this.setContractcreateinstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasContractcreateinstance = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ContractUpdateTransactionBody contractUpdateInstance = 9;
 * @return {?proto.proto.ContractUpdateTransactionBody}
 */
proto.proto.TransactionBody.prototype.getContractupdateinstance = function() {
  return /** @type{?proto.proto.ContractUpdateTransactionBody} */ (
    jspb.Message.getWrapperField(this, ContractUpdate_pb.ContractUpdateTransactionBody, 9));
};


/** @param {?proto.proto.ContractUpdateTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setContractupdateinstance = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearContractupdateinstance = function() {
  this.setContractupdateinstance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasContractupdateinstance = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional CryptoAddClaimTransactionBody cryptoAddClaim = 10;
 * @return {?proto.proto.CryptoAddClaimTransactionBody}
 */
proto.proto.TransactionBody.prototype.getCryptoaddclaim = function() {
  return /** @type{?proto.proto.CryptoAddClaimTransactionBody} */ (
    jspb.Message.getWrapperField(this, CryptoAddClaim_pb.CryptoAddClaimTransactionBody, 10));
};


/** @param {?proto.proto.CryptoAddClaimTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setCryptoaddclaim = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearCryptoaddclaim = function() {
  this.setCryptoaddclaim(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasCryptoaddclaim = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional CryptoCreateTransactionBody cryptoCreateAccount = 11;
 * @return {?proto.proto.CryptoCreateTransactionBody}
 */
proto.proto.TransactionBody.prototype.getCryptocreateaccount = function() {
  return /** @type{?proto.proto.CryptoCreateTransactionBody} */ (
    jspb.Message.getWrapperField(this, CryptoCreate_pb.CryptoCreateTransactionBody, 11));
};


/** @param {?proto.proto.CryptoCreateTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setCryptocreateaccount = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearCryptocreateaccount = function() {
  this.setCryptocreateaccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasCryptocreateaccount = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional CryptoDeleteTransactionBody cryptoDelete = 12;
 * @return {?proto.proto.CryptoDeleteTransactionBody}
 */
proto.proto.TransactionBody.prototype.getCryptodelete = function() {
  return /** @type{?proto.proto.CryptoDeleteTransactionBody} */ (
    jspb.Message.getWrapperField(this, CryptoDelete_pb.CryptoDeleteTransactionBody, 12));
};


/** @param {?proto.proto.CryptoDeleteTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setCryptodelete = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearCryptodelete = function() {
  this.setCryptodelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasCryptodelete = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional CryptoDeleteClaimTransactionBody cryptoDeleteClaim = 13;
 * @return {?proto.proto.CryptoDeleteClaimTransactionBody}
 */
proto.proto.TransactionBody.prototype.getCryptodeleteclaim = function() {
  return /** @type{?proto.proto.CryptoDeleteClaimTransactionBody} */ (
    jspb.Message.getWrapperField(this, CryptoDeleteClaim_pb.CryptoDeleteClaimTransactionBody, 13));
};


/** @param {?proto.proto.CryptoDeleteClaimTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setCryptodeleteclaim = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearCryptodeleteclaim = function() {
  this.setCryptodeleteclaim(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasCryptodeleteclaim = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional CryptoTransferTransactionBody cryptoTransfer = 14;
 * @return {?proto.proto.CryptoTransferTransactionBody}
 */
proto.proto.TransactionBody.prototype.getCryptotransfer = function() {
  return /** @type{?proto.proto.CryptoTransferTransactionBody} */ (
    jspb.Message.getWrapperField(this, CryptoTransfer_pb.CryptoTransferTransactionBody, 14));
};


/** @param {?proto.proto.CryptoTransferTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setCryptotransfer = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearCryptotransfer = function() {
  this.setCryptotransfer(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasCryptotransfer = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional CryptoUpdateTransactionBody cryptoUpdateAccount = 15;
 * @return {?proto.proto.CryptoUpdateTransactionBody}
 */
proto.proto.TransactionBody.prototype.getCryptoupdateaccount = function() {
  return /** @type{?proto.proto.CryptoUpdateTransactionBody} */ (
    jspb.Message.getWrapperField(this, CryptoUpdate_pb.CryptoUpdateTransactionBody, 15));
};


/** @param {?proto.proto.CryptoUpdateTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setCryptoupdateaccount = function(value) {
  jspb.Message.setOneofWrapperField(this, 15, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearCryptoupdateaccount = function() {
  this.setCryptoupdateaccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasCryptoupdateaccount = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional FileAppendTransactionBody fileAppend = 16;
 * @return {?proto.proto.FileAppendTransactionBody}
 */
proto.proto.TransactionBody.prototype.getFileappend = function() {
  return /** @type{?proto.proto.FileAppendTransactionBody} */ (
    jspb.Message.getWrapperField(this, FileAppend_pb.FileAppendTransactionBody, 16));
};


/** @param {?proto.proto.FileAppendTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setFileappend = function(value) {
  jspb.Message.setOneofWrapperField(this, 16, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearFileappend = function() {
  this.setFileappend(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasFileappend = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional FileCreateTransactionBody fileCreate = 17;
 * @return {?proto.proto.FileCreateTransactionBody}
 */
proto.proto.TransactionBody.prototype.getFilecreate = function() {
  return /** @type{?proto.proto.FileCreateTransactionBody} */ (
    jspb.Message.getWrapperField(this, FileCreate_pb.FileCreateTransactionBody, 17));
};


/** @param {?proto.proto.FileCreateTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setFilecreate = function(value) {
  jspb.Message.setOneofWrapperField(this, 17, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearFilecreate = function() {
  this.setFilecreate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasFilecreate = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional FileDeleteTransactionBody fileDelete = 18;
 * @return {?proto.proto.FileDeleteTransactionBody}
 */
proto.proto.TransactionBody.prototype.getFiledelete = function() {
  return /** @type{?proto.proto.FileDeleteTransactionBody} */ (
    jspb.Message.getWrapperField(this, FileDelete_pb.FileDeleteTransactionBody, 18));
};


/** @param {?proto.proto.FileDeleteTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setFiledelete = function(value) {
  jspb.Message.setOneofWrapperField(this, 18, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearFiledelete = function() {
  this.setFiledelete(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasFiledelete = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional FileUpdateTransactionBody fileUpdate = 19;
 * @return {?proto.proto.FileUpdateTransactionBody}
 */
proto.proto.TransactionBody.prototype.getFileupdate = function() {
  return /** @type{?proto.proto.FileUpdateTransactionBody} */ (
    jspb.Message.getWrapperField(this, FileUpdate_pb.FileUpdateTransactionBody, 19));
};


/** @param {?proto.proto.FileUpdateTransactionBody|undefined} value */
proto.proto.TransactionBody.prototype.setFileupdate = function(value) {
  jspb.Message.setOneofWrapperField(this, 19, proto.proto.TransactionBody.oneofGroups_[0], value);
};


proto.proto.TransactionBody.prototype.clearFileupdate = function() {
  this.setFileupdate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.TransactionBody.prototype.hasFileupdate = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.Transaction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.Transaction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.Transaction.displayName = 'proto.proto.Transaction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.Transaction.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.Transaction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.Transaction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Transaction.toObject = function(includeInstance, msg) {
  var f, obj = {
    body: (f = msg.getBody()) && proto.proto.TransactionBody.toObject(includeInstance, f),
    sigs: (f = msg.getSigs()) && BasicTypes_pb.SignatureList.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.Transaction}
 */
proto.proto.Transaction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.Transaction;
  return proto.proto.Transaction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.Transaction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.Transaction}
 */
proto.proto.Transaction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.proto.TransactionBody;
      reader.readMessage(value,proto.proto.TransactionBody.deserializeBinaryFromReader);
      msg.setBody(value);
      break;
    case 2:
      var value = new BasicTypes_pb.SignatureList;
      reader.readMessage(value,BasicTypes_pb.SignatureList.deserializeBinaryFromReader);
      msg.setSigs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.Transaction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.Transaction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.Transaction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.Transaction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.proto.TransactionBody.serializeBinaryToWriter
    );
  }
  f = message.getSigs();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      BasicTypes_pb.SignatureList.serializeBinaryToWriter
    );
  }
};


/**
 * optional TransactionBody body = 1;
 * @return {?proto.proto.TransactionBody}
 */
proto.proto.Transaction.prototype.getBody = function() {
  return /** @type{?proto.proto.TransactionBody} */ (
    jspb.Message.getWrapperField(this, proto.proto.TransactionBody, 1));
};


/** @param {?proto.proto.TransactionBody|undefined} value */
proto.proto.Transaction.prototype.setBody = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proto.Transaction.prototype.clearBody = function() {
  this.setBody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.Transaction.prototype.hasBody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional SignatureList sigs = 2;
 * @return {?proto.proto.SignatureList}
 */
proto.proto.Transaction.prototype.getSigs = function() {
  return /** @type{?proto.proto.SignatureList} */ (
    jspb.Message.getWrapperField(this, BasicTypes_pb.SignatureList, 2));
};


/** @param {?proto.proto.SignatureList|undefined} value */
proto.proto.Transaction.prototype.setSigs = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.proto.Transaction.prototype.clearSigs = function() {
  this.setSigs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.Transaction.prototype.hasSigs = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.proto);
